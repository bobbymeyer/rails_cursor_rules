---
description: 
globs: 
alwaysApply: true
---
# Development Workflow

This rule file defines the development workflow and practices for the project.

## File Patterns
- `test/**/*.rb`: Test files
- `app/**/*.rb`: Implementation files
- `.git/`: Git repository
- `.cursor/rules/docs/*.md`: Documentation files

## Feature Development
1. Create feature branch
   - Branch naming: `feature/[description]`
   - Based on latest main
   - Clean working directory

2. Research and Documentation
   - Check `.cursor/rules/docs/` for relevant patterns
   - Reference technology-specific docs (e.g., @docs/hotwire.md for Turbo)
   - Follow established patterns from documentation

3. Test-First Development
   - Write test first
   - Test should fail initially (red)
   - Test should be specific and focused
   - Test should be readable

4. Implementation
   - Write minimal code to pass test
   - Follow patterns from documentation
   - Run test (should pass - green)
   - Fix implementation if test fails
   - Repeat until test passes

5. Code Quality
   - Run rubocop-omakase
   - Check against project rules
   - Check against documentation patterns
   - Refactor if needed
   - Ensure all tests pass

6. Git Workflow
   - Stage changes
   - Write clear commit message
   - Commit changes
   - Run final test suite
   - Merge into main branch

## Pre-commit Checks
- Run test suite
- Run rubocop-omakase
- Check project rules
- Check documentation patterns
- Check security guidelines
- Check performance guidelines

## Pre-merge Checks
- Run full test suite
- Run all quality checks
- Check branch is up to date
- Check no conflicts
- Check all requirements met

## Post-merge Checks
- Verify main branch
- Run final test suite
- Check deployment readiness
- Update documentation if needed

## Dependencies
@file .cursor/rules/coding_style.mdc
@file .cursor/rules/tech_stack.mdc
@file .cursor/rules/docs/*.md 